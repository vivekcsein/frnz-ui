$textcolor: nth(
  $list: $togglecp,
  $n: 2,
);
$bgcolor: nth(
  $list: $togglebg,
  $n: 3,
);
$shadowcolor: nth(
  $list: $togglebg,
  $n: 4,
);

$placeholderColor: nth(
  $list: $togglecp,
  $n: 2,
);

:root {
  --frnz_placeholder_color: white;
}

input[type="text"],
input[type="password"],
textarea {
  border: none;
  outline: none;
  box-sizing: border-box;
  font-size: $font_size_default;
  padding: 0.5rem 1rem;
  background-color: $bgcolor;
  color: var(--frnz_placeholder_color);
}
input::placeholder {
  color: var(--frnz_placeholder_color);
}

.frnz_ui_input_setplaceholder {
  input::placeholder {
    color: var(--frnz_placeholder_color);
  }
}

.frnz_ui_input_default {
  width: fit-content;
  min-width: 300px;
  padding: 5px 10px;
  border: none;
  outline: none;
  color: $textcolor;
  background-color: $bgcolor;
}

.frnz_ui_input_var_password {
  width: fit-content;
  padding: 0 1rem 0 0;
  background-color: $bgcolor;
  input {
    background-color: inherit;
  }
}

.frnz_input_gsap {
  @extend .frnz_ui_input_default;
  // background-color: $bgcolor;
}

//input1

.container {
  position: relative;
  --size-button: 40px;
  color: $textcolor;
  .icon {
    position: absolute;
    width: var(--size-button);
    height: var(--size-button);
    top: 0;
    left: 0;
    padding: 8px;
    pointer-events: none;
    svg {
      width: 100%;
      height: 100%;
    }
  }
}
.input {
  padding-left: var(--size-button);
  height: var(--size-button);
  font-size: 15px;
  border: none;
  color: $textcolor;
  outline: none;
  width: var(--size-button);
  transition: all ease 0.3s;
  background-color: $bgcolor;
  box-shadow: 1.5px 1.5px 3px $shadowcolor,
    -1.5px -1.5px 3px rgb(95 94 94 / 25%), inset 0px 0px 0px $shadowcolor,
    inset 0px -0px 0px #5f5e5e;
  border-radius: 50px;
  cursor: pointer;
  &:focus {
    width: 200px;
    cursor: text;
    box-shadow: 0px 0px 0px $shadowcolor, 0px 0px 0px rgb(95 94 94 / 25%),
      inset 1.5px 1.5px 3px $shadowcolor, inset -1.5px -1.5px 3px #5f5e5e;
    + {
      .icon {
        pointer-events: all;
        cursor: pointer;
      }
    }
  }
  &:not(:invalid) {
    width: 200px;
    cursor: text;
    box-shadow: 0px 0px 0px $shadowcolor, 0px 0px 0px rgb(95 94 94 / 25%),
      inset 1.5px 1.5px 3px $shadowcolor, inset -1.5px -1.5px 3px #5f5e5e;
    + {
      .icon {
        pointer-events: all;
        cursor: pointer;
      }
    }
  }
}

.textInputWrapper {
  position: relative;
  width: 180px;
  margin: 12px 5px;
  &:before {
    transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    border-bottom: 1px solid rgba(0, 0, 0, 0.42);
    content: "";
    left: 0;
    right: 0;
    position: absolute;
    pointer-events: none;
    bottom: -1px;
    z-index: 4;
    width: 100%;
    transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    border-bottom: 1px solid rgba(0, 0, 0, 0.42);
  }
  &:after {
    content: "";
    left: 0;
    right: 0;
    position: absolute;
    pointer-events: none;
    bottom: -1px;
    z-index: 4;
    width: 100%;
    content: "";
    transform: scaleX(0);
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    will-change: transform;
    border-bottom: 2px solid nth($list: $togglecp, $n: 4);
    border-bottom-color: nth($list: $togglecp, $n: 4);
  }
  &:focus-within {
    &:before {
      border-bottom: 1px solid var(--accent-color);
      border-bottom: 1px solid var(--accent-color);
      transform: scaleX(1);
    }
    &:after {
      border-bottom: 2px solid var(--accent-color);
      transform: scaleX(1);
    }
    .textInput {
      background-color: $bgcolor;
      &::placeholder {
        opacity: 0;
      }
    }
  }
  .textInput {
    border-radius: 5px 5px 0px 0px;
    box-shadow: 0px 2px 5px rgb(35 35 35 / 30%);
    max-height: 36px;
    background-color: $bgcolor;
    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
    transition-duration: 200ms;
    transition-property: background-color;
    color: $textcolor;
    font-size: 14px;
    font-weight: 500;
    padding: 12px;
    width: 100%;
    border-left: none;
    border-bottom: none;
    border-right: none;
    &:focus {
      outline: none;
      background-color: $bgcolor;
    }
    &:active {
      outline: none;
      background-color: $bgcolor;
    }
  }
}
.textInput {
  &::placeholder {
    transition: opacity 250ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    opacity: 1;
    user-select: none;
    color: $textcolor;
  }
}
